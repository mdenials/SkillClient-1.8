package com.skillclient.modules.exploit;

import net.minecraft.network.Packet;
import com.skillclient.wrapper.SkillWrapper;
import net.minecraft.network.play.client.C14PacketTabComplete;
import com.skillclient.events.EventUpdate;
import com.skillclient.events.api.EventTarget;
import java.util.List;
import joptsimple.internal.Strings;
import java.util.Collections;
import com.skillclient.gui.GuiOverlay;
import java.awt.Color;
import java.util.ArrayList;
import net.minecraft.network.play.server.S3APacketTabComplete;
import com.skillclient.events.EventPacketReceived;
import com.skillclient.main.Register;
import com.skillclient.utils.TimerUtil;
import com.skillclient.misc.Module;

public class PluginExploit extends Module
{
    private boolean scan;
    private TimerUtil tickTimer;
    
    public PluginExploit() {
        super("PluginExploit", Register.Category.EXPLOIT, "List all plugins. Made by ccbluex");
        this.scan = false;
        this.tickTimer = new TimerUtil();
    }
    
    @EventTarget
    public void onSend(final EventPacketReceived event) {
        try {
            if (event.getPacket() instanceof S3APacketTabComplete) {
                final S3APacketTabComplete packet = (S3APacketTabComplete)event.getPacket();
                final List<String> plugins = new ArrayList<String>();
                final String[] matches = packet.func_149630_c();
                if (matches == null) {
                    GuiOverlay.notify("Invalid Packet.", Color.RED);
                    return;
                }
                String[] array;
                for (int length = (array = matches).length, i = 0; i < length; ++i) {
                    final String s = array[i];
                    final String[] command = s.split(":");
                    if (command.length > 1) {
                        final String pluginName = command[0].replace("/", "");
                        if (!plugins.contains(pluginName)) {
                            plugins.add(pluginName);
                        }
                    }
                }
                Collections.sort(plugins);
                if (!plugins.isEmpty()) {
                    final String s = "Plugins §7(§8" + plugins.size() + "§7): §c" + Strings.join((String[])plugins.toArray(new String[0]), "§7, §c");
                    PluginExploit.sc.chat.chat("§a" + s);
                    GuiOverlay.notify(s, Color.GREEN);
                }
                else {
                    GuiOverlay.notify("No plugins found.", Color.RED);
                }
                this.scan = false;
                this.onDisable();
                this.tickTimer.reset();
            }
        }
        catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    @EventTarget
    public void onUpdate(final EventUpdate event) {
        if (this.tickTimer.hasReached(5000.0f)) {
            GuiOverlay.notify("§cPlugins check timed out...", Color.RED);
            this.tickTimer.reset();
            this.onDisable();
        }
    }
    
    public void onEnable() {
        super.onEnable();
        SkillWrapper.sendPacket((Packet)new C14PacketTabComplete("/"));
        this.scan = true;
        this.tickTimer.reset();
    }
    
    public void onDisable() {
        super.onDisable();
        this.scan = false;
    }
}
